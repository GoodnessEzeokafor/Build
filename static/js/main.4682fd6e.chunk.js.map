{"version":3,"sources":["components/countdown/Countdown.js","hoc/aux.js","views/thank.js","App.js","serviceWorker.js","index.js"],"names":["Countdown","props","state","days","undefined","hours","minutes","seconds","message","handleSubmit","event","preventDefault","email","value","console","log","axios","post","then","res","err","catch","history","push","stopPropagation","this","interval","setInterval","timeTillDate","timeFormat","moment","now","countdown","format","setState","clearInterval","className","style","backgroundImage","onSubmit","data-validate","type","name","placeholder","ref","input","required","Component","withRouter","aux","children","ThankYou","class","to","role","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4682fd6e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport moment from \"moment\";\n\nimport axios from 'axios';\n\nimport { withRouter } from 'react-router-dom';\n\n\n\nclass Countdown extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\t// this.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\t\n\tstate = {\n\t\tdays: undefined,\n        hours: undefined,\n        minutes: undefined,\n\t\tseconds: undefined,\n\t\tmessage:''\n\t}\n\n\tcomponentDidMount() {\n        this.interval = setInterval(() => {\n            const { timeTillDate, timeFormat } = this.props;\n            const then = moment('21/03/2020', 'DD/MM/YYYY');\n            const now = moment();\n            const countdown = moment(then - now);\n            const days = countdown.format('D');\n            const hours = countdown.format('HH');\n            const minutes = countdown.format('mm');\n            const seconds = countdown.format('ss');\n\n            this.setState({ days, hours, minutes, seconds });\n        }, 1000);\n\t}\n\t\n\tcomponentWillUnmount() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n\n\t handleSubmit = (event)=>{\n\t\tevent.preventDefault();\n\t\t const email = this.email.value\n\n\t\t console.log(email)\n\t\t \n\t\t//  console.log(email)\n\t\t// console.log(\"HELLO WORLD\")\n\t\taxios.post(`https://eles-api.herokuapp.com/api/users`, {email})\n\t\t\t.then((res, err) =>{\n\t\t\t\tif(err){\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t}\n\t\t\t\tconsole.log(res.message)\n\t\t\t} )\n\t\t\t.catch(err => console.log(err))\n\n\t\t\tthis.props.history.push('/thanks')\n\t\t\tevent.stopPropagation();\n\n\t\t\t\n\n\n\t}\n\trender() {\n\t\tconst { days, hours, minutes, seconds } = this.state;\n\t\treturn (\n\t\t<div \n                className=\"bg-img1 overlay1 size1 flex-w flex-c-m p-t-55 p-b-55 p-l-15 p-r-15\" \n                style={{ backgroundImage: \"url('images/bg01.jpg')\" }}>\n\t\t<div className=\"wsize1\">\n\t\t\t<p className=\"txt-center p-b-23\">\n\t\t\t\t<i className=\"zmdi zmdi-card-giftcard cl0 fs-60\"></i>\n\t\t\t</p>\n\n\t\t\t<h3 className=\"l1-txt1 txt-center p-b-22\">\n\t\t\t\tComing Soon\n\t\t\t</h3>\n\n\t\t\t<p className=\"txt-center m2-txt1 p-b-67\">\n\t\t\t\tElesarr first decentralized crowdfunding application in Nigeria launching on the 20th of March 2020 \n\t\t\t</p>\n\n\t\t\t<div className=\"flex-w flex-sa-m cd100 bor1 p-t-42 p-b-22 p-l-50 p-r-50 respon1\">\n\t\t\t\t<div className=\"flex-col-c-m wsize2 m-b-20\">\n\t\t<span className=\"l1-txt2 p-b-4 days\">{days}</span>\n\t\t\t\t\t<span className=\"m2-txt2\">Days</span>\n\t\t\t\t</div>\n\n\t\t\t\t<span className=\"l1-txt2 p-b-22\">:</span>\n\t\t\t\t\n\t\t\t\t<div className=\"flex-col-c-m wsize2 m-b-20\">\n\t\t<span className=\"l1-txt2 p-b-4 hours\">{hours}</span>\n\t\t\t\t\t<span className=\"m2-txt2\">Hours</span>\n\t\t\t\t</div>\n\n\t\t\t\t<span className=\"l1-txt2 p-b-22 respon2\">:</span>\n\n\t\t\t\t<div className=\"flex-col-c-m wsize2 m-b-20\">\n\t\t<span className=\"l1-txt2 p-b-4 minutes\">{minutes}</span>\n\t\t\t\t\t<span className=\"m2-txt2\">Minutes</span>\n\t\t\t\t</div>\n\n\t\t\t\t<span className=\"l1-txt2 p-b-22\">:</span>\n\n\t\t\t\t<div className=\"flex-col-c-m wsize2 m-b-20\">\n\t\t<span className=\"l1-txt2 p-b-4 seconds\">{seconds}</span>\n\t\t\t\t\t<span className=\"m2-txt2\">Seconds</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<form\n\t\t\t\t\t className=\"flex-w flex-c-m contact100-form validate-form p-t-70\"\n\t\t\t\t\t onSubmit={this.handleSubmit}\n\t\t\t\t\t >\n\t\t\t\t<div className=\"wrap-input100 validate-input where1\" data-validate = \"Email is required: ex@abc.xyz\">\n                    <input \n                        className=\"s1-txt1 placeholder0 input100\" \n                        type=\"text\" name=\"email\" placeholder=\"Email Address\" \n\t\t\t\t\t\tref ={(input) => {this.email = input}}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t</div>\n\t\t\t\t<button type=\"submit\"  className=\"flex-c-m s1-txt1 size2 how-btn trans-04 where1\">\n\t\t\t\t\tNotify Me\n\t\t\t\t</button>\n\t\t\t</form>\t\t\t\n\t\t</div>\n\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(Countdown);\n\n\n","const aux = (props) => props.children;\n\n\nexport default aux\n","import React, { Component } from 'react'\r\n\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nexport default class ThankYou extends Component{\r\n    render(){\r\n\r\n        return(\r\n<div class=\"jumbotron text-center\">\r\n  <h1 class=\"display-3\">Thank You! Check Your Inbox</h1>\r\n  {/* <p class=\"lead\"><strong>Please check your email</strong> for further instructions on how to complete your account setup.</p> */}\r\n  <hr />\r\n\r\n  <p class=\"lead\">\r\n    <Link class=\"btn btn-primary btn-sm\" to=\"/\" role=\"button\">\r\n        Continue to homepage</Link>\r\n  </p>\r\n</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport Countdown from \"./components/countdown/Countdown\"\nimport Aux from \"./hoc/aux.js\"\nimport ThankYou from './views/thank';\n\nimport { Route,Switch, BrowserRouter as Router } from \"react-router-dom\"\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Aux>\n      \n<Router>\n        <Switch>\n              <Route path=\"/thanks\">\n                <ThankYou />\n              </Route>\n              <Route exact path=\"/\">\n              <Countdown />\n      </Route>\n\n              \n            </Switch>\n\n            </Router>\n\n      </Aux>\n    );\n  }\n}\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}