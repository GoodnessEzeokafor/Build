{"version":3,"sources":["hoc/aux.js","components/countdown/Countdown2.js","views/thank.js","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","Countdown","state","days","undefined","hours","minutes","seconds","message","handleSubmit","event","preventDefault","email","value","axios","post","then","res","err","console","log","catch","history","push","stopPropagation","this","interval","setInterval","timeleft","timeTillDate","timeFormat","Date","getTime","Math","floor","setState","clearInterval","className","height","src","style","objectFit","width","marginLeft","marginRight","id","onSubmit","type","name","placeholder","ref","input","href","target","textDecoration","Component","withRouter","ThankYou","class","to","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b8862c0.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\n\nexport default aux\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport Aux from \"../../hoc/aux\"\n\n\nclass Countdown extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\t// this.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\t\n\tstate = {\n\t\tdays: undefined,\n        hours: undefined,\n        minutes: undefined,\n\t\tseconds: undefined,\n\t\tmessage:''\n\t}\n\n\tcomponentDidMount() {\n        this.interval = setInterval(() => {\n            const { timeTillDate, timeFormat } = this.props;\n            //   const then = moment('2020-04-20', 'YYYY-MM-DD');\n            const then =  new Date(\"Apr 20, 2020 16:37:52\").getTime();\n            // const now = new Date();\n            const now = new Date().getTime();\n\n            // const countdown = moment(then - now);\n            var timeleft = then - now;\n\n            // console.log(\"COUNTDOWN\", new Date(countdown))\n            // const days = countdown.format('DD');\n            // const hours = countdown.format('HH');\n            // const minutes = countdown.format('mm');\n            // const seconds = countdown.format('ss');\n\n            var days = Math.floor(timeleft / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((timeleft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((timeleft % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((timeleft % (1000 * 60)) / 1000);\n            this.setState({ days, hours, minutes, seconds });\n        }, 1000);\n\t}\n\t\n\tcomponentWillUnmount() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n\n\t handleSubmit = (event)=>{\n\t\tevent.preventDefault();\n\t\t const email = this.email.value\n\n\t\t//  console.log(email)\n\t\t \n\t\t//  console.log(email)\n\t\t// console.log(\"HELLO WORLD\")\n\t\taxios.post(`https://eles-api.herokuapp.com/api/users`, {email})\n\t\t\t.then((res, err) =>{\n\t\t\t\tif(err){\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t}\n\t\t\t\tconsole.log(res.message)\n\t\t\t} )\n\t\t\t.catch(err => console.log(err))\n\n\t\t\tthis.props.history.push('/thanks')\n\t\t\tevent.stopPropagation();\n\n\t\t\t\n\n\n\t}\n\trender() {\n\t\tconst { days, hours, minutes, seconds } = this.state;\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t    <div className=\"container\">\n      <img\n      height=\"90px\" \n\n      className=\"logo\" src=\"img/Web2.png\" style={{objectFit:\"cover\", width:'10rem', marginLeft:'auto', marginRight:'auto'}}/>\n      <h1 className=\"heading\">You are just One Step Away from Raising the Funds you \n <span> need!</span></h1>\n      <p className=\"sub-heading\"><b>\n      800,060</b> People behind you.\n<b>254</b> in front of you, You came right on time!\n      </p>\n      <h1 className=\"heading\">We are launching <span>soon!</span></h1>\n      <h3 className=\"sub-heading\">Subscribe and get notified</h3>\n      <h3 className=\"sub-heading\">Telegram Link Below</h3>\n\n\n      <form   id=\"form\" onSubmit={this.handleSubmit}>\n        <div className=\"flex-container\">\n          <div className=\"form-control\">\n\t\t\t<input \n\t\t\t\ttype=\"email\" \n\t\t\t\tname=\"email\" \n\t\t\t\tid=\"email\" \n\t\t\t\tplaceholder=\"Your email address..\" \n\t\t\t\tref={(input) => this.email = input}/>\n             <small>Please provide a valid email address</small> \n          </div>\n          <input type=\"submit\" id=\"btn\" value=\"Notify Me\" className=\"button\" />\n        </div>\n      </form>\n\n      <div className=\"count-wrapper\">\n        <p className=\"sub-heading\">\n        Elessar is a crowdfunding platform built specifically to help you raise funds for your business or social\n      course.\n      It is the first decentralized Crowdfunding platform in Africa. launching on the 21th of April 2020</p>\n        <ul className=\"flex-container\">\n          <li className=\"flex-item\">\n            <div className=\"days\">{days} <span>days</span></div>\n          </li>\n          <li className=\"flex-item\">\n            <div className=\"hours\">{hours}<span>hrs</span></div>\n          </li>\n          <li className=\"flex-item\">\n            <div className=\"minutes\">{minutes}<span>mins</span></div>\n          </li>\n          <li className=\"flex-item\">\n            <div className=\"seconds\">{seconds}<span>secs</span></div>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <footer>\n      <div className=\"social\">\n        <a\n          href=\"https://www.facebook.com/100003719094788/posts/1839439092856709/?app=fbl\" target=\"_blank\"\n        ><i className=\"fab fa-facebook 3x\"></i></a>\n        <a href=\"#\"><i className=\"fab fa-twitter x3\"></i></a>\n        <a href=\"#\"><i className=\"fab fa-instagram x3\"></i></a>\n        <a \n          href=\"https://t.me/joinchat/HlCKLRilXKjshaMizmtYGQ\" \n          target=\"_blank\"><i className=\"fab fa-telegram x3\"></i></a>\n        \n      </div>\n      <small className=\"attribution\">&copy; Copyright <a target=\"_blank\" href=\"https://aragontech.co/\" style={{textDecoration:\"none\"}}>AragonTech</a>. All rights reserved.</small>\n    </footer>\n\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nexport default withRouter(Countdown);\n\n\n","import React, { Component } from 'react'\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport Aux from \"../hoc/aux\"\r\n\r\nexport default class ThankYou extends Component{\r\n    render(){\r\n\r\n        return(\r\n          <Aux>\r\n          <section class=\"flex-container thanks\">\r\n          <h1>THANK YOU!</h1>\r\n          <i class=\"fa fa-check main-content__checkmark\" id=\"checkmark\"></i>\r\n          <Link to=\"/\">Continue to Home</Link>\r\n        </section>\r\n        <footer>\r\n          <div class=\"social\">\r\n            <a href=\"#\"><i class=\"fab fa-facebook 3x\"></i></a>\r\n            <a href=\"#\"><i class=\"fab fa-twitter x3\"></i></a>\r\n            <a href=\"#\"><i class=\"fab fa-instagram x3\"></i></a>\r\n          </div>\r\n          <small className=\"attribution\">&copy; Copyright <a target=\"_blank\" href=\"https://aragontech.co/\" style={{textDecoration:\"none\"}}>AragonTech</a>. All rights reserved.</small>\r\n        </footer>\r\n        </Aux>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport Aux from \"./hoc/aux.js\"\n// import Preloader from \"./components/home/Preloader\"\nimport { \n  Link,\n  Route,\n  Switch, \n  BrowserRouter as Router } from \"react-router-dom\"\n\nimport CookieModal from \"./components/home/CookieModal\"\nimport Home from \"./components/home/Home\"\nimport Count from \"./components/countdown/Countdown2\"\nimport ThankYou from \"./views/thank\"\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n      <Aux>\n      <Switch>\n              <Route path=\"/thanks\">\n                <ThankYou />\n              </Route>\n              <Route exact path=\"/\">\n              <Count />\n      </Route>\n\n\n            </Switch>\n\n       {/* <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\n        <div className=\"container\">\n            <Link className=\"navbar-brand\" to=\"/\">             \n               <img src=\"Web2.png\" style={{height:'8rem'}}/>\n            </Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul className=\"navbar-nav mt-4 mt-lg-0 ml-auto\">\n                    <li className=\"nav-item \">\n                        <Link className=\"nav-link\" to=\"/login\">Login</Link>\n                    </li>\n                    <li className=\"nav-item dropdown dropdown-animate\" data-toggle=\"hover\">\n                        <Link className=\"nav-link\" to=\"/signup\" role=\"button\" \n                        data-toggle=\"dropdown\" \n                        aria-haspopup=\"true\" aria-expanded=\"false\">Signup</Link>\n                    </li>\n                </ul>\n                <Link \n                  className=\"navbar-btn btn btn-sm btn-primary d-none d-lg-inline-block ml-3\" \n                  to=\"/projects\">\n                     Discover\n                </Link>\n                <Link \n                  className=\"navbar-btn btn btn-sm btn-warning d-none d-lg-inline-block\" \n                  to=\"/create\" target=\"_blank\">\n                    Start A Campaigne\n                </Link>\n                <div className=\"d-lg-none text-center\">\n                    <a \n                    href=\"#\" \n                    className=\"btn btn-block btn-sm btn-warning\">See more details</a>\n                </div>\n            </div>\n        </div>\n    </nav> */}\n    {/* <Home /> */}\n      </Aux>\n      </Router>\n    );\n  }\n}\n// function App() {\n//   return (\n//     <div classNameName=\"App\">\n//       <header classNameName=\"App-header\">\n//         <img src={logo} classNameName=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n{/* <Router>\n        <Switch>\n              <Route path=\"/thanks\">\n                <ThankYou />\n              </Route>\n              <Route exact path=\"/\">\n              <Countdown />\n      </Route>\n\n              \n            </Switch>\n\n            </Router> */}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}